"""Added product_description field to products

Revision ID: 3d6985427f05
Revises: 
Create Date: 2024-09-21 15:32:31.611395

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3d6985427f05'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_products_product_id', table_name='products')
    op.drop_table('products')
    op.drop_table('chat_history')
    op.drop_table('authentication')
    op.drop_table('message_history')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('dob', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('USER', 'ADMIN', 'SHOP_OWNER', name='userroles'), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('phone_number', name='users_phone_number_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('message_history',
    sa.Column('message_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('USER', 'ASSISTANT', 'SYSTEM', name='messagerole'), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_history.session_id'], name='message_history_session_id_fkey'),
    sa.PrimaryKeyConstraint('message_id', name='message_history_pkey')
    )
    op.create_table('authentication',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hash_pwd', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='authentication_user_id_fkey'),
    sa.ForeignKeyConstraint(['user_name'], ['users.phone_number'], name='authentication_user_name_fkey'),
    sa.PrimaryKeyConstraint('user_id', name='authentication_pkey'),
    sa.UniqueConstraint('user_name', name='authentication_user_name_key')
    )
    op.create_table('chat_history',
    sa.Column('session_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('model_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='chat_history_user_id_fkey'),
    sa.PrimaryKeyConstraint('session_id', name='chat_history_pkey')
    )
    op.create_table('products',
    sa.Column('product_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('create_at_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('product_id', name='products_pkey')
    )
    op.create_index('ix_products_product_id', 'products', ['product_id'], unique=False)
    # ### end Alembic commands ###
